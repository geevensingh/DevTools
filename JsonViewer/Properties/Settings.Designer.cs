//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JsonViewer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.0.3.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string MainWindowPlacement {
            get {
                return ((string)(this["MainWindowPlacement"]));
            }
            set {
                this["MainWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool FindIgnoreCase {
            get {
                return ((bool)(this["FindIgnoreCase"]));
            }
            set {
                this["FindIgnoreCase"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool FindSearchKeys {
            get {
                return ((bool)(this["FindSearchKeys"]));
            }
            set {
                this["FindSearchKeys"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool FindSearchValues {
            get {
                return ((bool)(this["FindSearchValues"]));
            }
            set {
                this["FindSearchValues"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FindSearchParentValues {
            get {
                return ((bool)(this["FindSearchParentValues"]));
            }
            set {
                this["FindSearchParentValues"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ConfigPath {
            get {
                return ((string)(this["ConfigPath"]));
            }
            set {
                this["ConfigPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool HighlightSelectedParents {
            get {
                return ((bool)(this["HighlightSelectedParents"]));
            }
            set {
                this["HighlightSelectedParents"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string FindText {
            get {
                return ((string)(this["FindText"]));
            }
            set {
                this["FindText"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MainWindowToolbarTextVisible {
            get {
                return ((bool)(this["MainWindowToolbarTextVisible"]));
            }
            set {
                this["MainWindowToolbarTextVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MainWindowToolbarIconVisible {
            get {
                return ((bool)(this["MainWindowToolbarIconVisible"]));
            }
            set {
                this["MainWindowToolbarIconVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MainWindowWarnOnDefaultConfig {
            get {
                return ((bool)(this["MainWindowWarnOnDefaultConfig"]));
            }
            set {
                this["MainWindowWarnOnDefaultConfig"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool FindSearchValueTypes {
            get {
                return ((bool)(this["FindSearchValueTypes"]));
            }
            set {
                this["FindSearchValueTypes"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool HighlightSimilarKeys {
            get {
                return ((bool)(this["HighlightSimilarKeys"]));
            }
            set {
                this["HighlightSimilarKeys"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool HighlightSimilarValues {
            get {
                return ((bool)(this["HighlightSimilarValues"]));
            }
            set {
                this["HighlightSimilarValues"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
                  {
                  ""treeViewForeground"": ""DarkGray"",
                  ""treeViewSelectedBackground"": ""LightYellow"",
                  ""treeViewSelectedForeground"": ""Black"",
                  ""treeViewInactiveSelectionHighlightBrushKey"": ""LightYellow"",
                  ""treeViewInactiveSelectionHighlightTextBrushKey"": ""Black"",
                  ""treeViewFontSize"": 12,
                  ""treeViewSearchResultForeground"": ""blue"",
                  ""treeViewSearchResultBackground"": ""LightGreen"",
                  ""treeViewHighlights"": [
                  {
                  ""valueContains"": [ ""failure"", ""failed"", ""error"" ],
                  ""color"": ""red"",
                  ""fontSize"": 16,
                  ""appliesToParents"":  true
                  },
                  {
                  ""valueContains"": [ ""success"", ""succeeded"", ""passed"" ],
                  ""color"": ""green"",
                  ""fontSize"": 16,
                  ""appliesToParents"": true
                  },
                  {
                  ""valueContains"": [ ""pending"", ""warning"" ],
                  ""color"": ""DarkOrange"",
                  ""appliesToParents"": true
                  }
                  ]
                  }")]
        public string DefaultConfigJson {
            get {
                return ((string)(this["DefaultConfigJson"]));
            }
            set {
                this["DefaultConfigJson"] = value;
            }
        }
    }
}
