<Window
    x:Class="JsonViewer.View.SettingsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:JsonViewer.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:JsonViewer.Model"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="SettingsWindow"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    WindowStartupLocation="CenterOwner"
    WindowStyle="ToolWindow"
    mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>


        <Style x:Key="ExampleTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{Binding Path=DefaultFontSize}" />
            <Setter Property="Margin" Value="5,5" />
        </Style>

        <Style x:Key="ColorPropertyValueWrapperStyle" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="5,5" />
        </Style>

        <Style TargetType="xctk:ColorPicker">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="DisplayColorAndName" Value="True" />
            <Setter Property="MinWidth" Value="100" />
        </Style>

        <ObjectDataProvider
            x:Key="odpMatchType"
            MethodName="GetValues"
            ObjectType="{x:Type model:MatchTypeEnum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="model:MatchTypeEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="odpMatchField"
            MethodName="GetValues"
            ObjectType="{x:Type model:MatchFieldEnum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="model:MatchFieldEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <DataTemplate x:Key="ColorCellTemplate">
            <TextBlock
                Margin="5,2"
                Background="{Binding Path=BackgroundBrush}"
                FontSize="{Binding Path=FontSize}"
                Foreground="{Binding Path=ForegroundBrush}"
                Text="{Binding Path=ColorString}" />
        </DataTemplate>
        <DataTemplate x:Key="ColorCellEditingTemplate">
            <StackPanel Margin="5,2" Orientation="Horizontal">
                <xctk:ColorPicker DisplayColorAndName="True" SelectedColor="{Binding Path=ForegroundColor}" />
                <TextBlock Margin="5,0">on</TextBlock>
                <xctk:ColorPicker DisplayColorAndName="True" SelectedColor="{Binding Path=BackgroundColor}" />
            </StackPanel>
        </DataTemplate>
        <Style x:Key="TextBlockCellStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="5,2" />
        </Style>
        <Style x:Key="CheckBoxCellStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="5,2" />
        </Style>
        <Style x:Key="ComboBoxCellStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5,2" />
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <TextBlock
            Grid.Row="0"
            Grid.Column="1"
            HorizontalAlignment="Center">
            Note: &quot;Transparent&quot; means default
        </TextBlock>

        <TextBlock
            Grid.Row="1"
            Grid.Column="0"
            Background="{Binding Path=DefaultBackgroundBrush}"
            Foreground="{Binding Path=DefaultForegroundBrush}"
            Style="{StaticResource ExampleTextBlockStyle}">
            Default Text
        </TextBlock>
        <StackPanel
            Grid.Row="1"
            Grid.Column="1"
            Style="{StaticResource ColorPropertyValueWrapperStyle}">
            <xctk:ColorPicker SelectedColor="{Binding Path=DefaultForegroundColor}" />
            <TextBlock Margin="5,0">on</TextBlock>
            <xctk:ColorPicker SelectedColor="{Binding Path=DefaultBackgroundColor}" />
            <TextBlock Margin="5,0">at</TextBlock>
            <TextBox Text="{Binding Path=DefaultFontSize}" />
            <TextBlock Margin="5,0">pt</TextBlock>
        </StackPanel>

        <TextBlock
            Grid.Row="2"
            Grid.Column="0"
            Background="{Binding Path=SelectedBackgroundBrush}"
            Foreground="{Binding Path=SelectedForegroundBrush}"
            Style="{StaticResource ExampleTextBlockStyle}">
            Selected Text
        </TextBlock>
        <StackPanel
            Grid.Row="2"
            Grid.Column="1"
            Style="{StaticResource ColorPropertyValueWrapperStyle}">
            <xctk:ColorPicker SelectedColor="{Binding Path=SelectedForegroundColor}" />
            <TextBlock Margin="5,0">on</TextBlock>
            <xctk:ColorPicker SelectedColor="{Binding Path=SelectedBackgroundColor}" />
        </StackPanel>

        <TextBlock
            Grid.Row="3"
            Grid.Column="0"
            Background="{Binding Path=SearchResultBackgroundBrush}"
            Foreground="{Binding Path=SearchResultForegroundBrush}"
            Style="{StaticResource ExampleTextBlockStyle}">
            SearchResult Text
        </TextBlock>
        <StackPanel
            Grid.Row="3"
            Grid.Column="1"
            Style="{StaticResource ColorPropertyValueWrapperStyle}">
            <xctk:ColorPicker SelectedColor="{Binding Path=SearchResultForegroundColor}" />
            <TextBlock Margin="5,0">on</TextBlock>
            <xctk:ColorPicker SelectedColor="{Binding Path=SearchResultBackgroundColor}" />
        </StackPanel>

        <TextBlock
            Grid.Row="4"
            Grid.Column="0"
            Background="{Binding Path=SimilarNodeBackgroundBrush}"
            Foreground="{Binding Path=SimilarNodeForegroundBrush}"
            Style="{StaticResource ExampleTextBlockStyle}">
            SimilarNode Text
        </TextBlock>
        <StackPanel
            Grid.Row="4"
            Grid.Column="1"
            Style="{StaticResource ColorPropertyValueWrapperStyle}">
            <xctk:ColorPicker SelectedColor="{Binding Path=SimilarNodeForegroundColor}" />
            <TextBlock Margin="5,0">on</TextBlock>
            <xctk:ColorPicker SelectedColor="{Binding Path=SimilarNodeBackgroundColor}" />
        </StackPanel>

        <TextBlock
            Grid.Row="5"
            Grid.Column="0"
            Background="{Binding Path=SelectedParentBackgroundBrush}"
            Foreground="{Binding Path=SelectedParentForegroundBrush}"
            Style="{StaticResource ExampleTextBlockStyle}">
            SelectedParent Text
        </TextBlock>
        <StackPanel
            Grid.Row="5"
            Grid.Column="1"
            Style="{StaticResource ColorPropertyValueWrapperStyle}">
            <xctk:ColorPicker SelectedColor="{Binding Path=SelectedParentForegroundColor}" />
            <TextBlock Margin="5,0">on</TextBlock>
            <xctk:ColorPicker SelectedColor="{Binding Path=SelectedParentBackgroundColor}" />
        </StackPanel>

        <DataGrid
            x:Name="RulesList"
            Grid.Row="6"
            Grid.ColumnSpan="2"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            AddingNewItem="RulesList_AddingNewItem"
            AutoGenerateColumns="False"
            CanUserAddRows="True"
            CanUserDeleteRows="True"
            CanUserReorderColumns="False"
            CanUserResizeRows="False"
            CanUserSortColumns="True"
            CellEditEnding="RulesList_CellEditEnding"
            InitializingNewItem="RulesList_InitializingNewItem"
            ItemsSource="{Binding Path=RuleSet.Rules, Mode=TwoWay}"
            SelectionMode="Single"
            SelectionUnit="FullRow">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Binding="{Binding Path=Index}"
                    ElementStyle="{StaticResource TextBlockCellStyle}"
                    Header="Order" />
                <!--  how matches are made  -->
                <DataGridTextColumn
                    Binding="{Binding Path=MatchString}"
                    ElementStyle="{StaticResource TextBlockCellStyle}"
                    Header="Match string" />
                <DataGridComboBoxColumn
                    ElementStyle="{StaticResource ComboBoxCellStyle}"
                    Header="Match type"
                    ItemsSource="{Binding Source={StaticResource odpMatchType}}"
                    SelectedItemBinding="{Binding Path=MatchType}" />
                <DataGridComboBoxColumn
                    ElementStyle="{StaticResource ComboBoxCellStyle}"
                    Header="Match field"
                    ItemsSource="{Binding Source={StaticResource odpMatchField}}"
                    SelectedItemBinding="{Binding Path=MatchField}" />
                <DataGridCheckBoxColumn
                    Binding="{Binding Path=IgnoreCase}"
                    ElementStyle="{StaticResource CheckBoxCellStyle}"
                    Header="Ignore Case" />
                <DataGridCheckBoxColumn
                    Binding="{Binding Path=AppliesToParents}"
                    ElementStyle="{StaticResource CheckBoxCellStyle}"
                    Header="Applies to parents" />

                <!--  what happens when a match is made  -->
                <DataGridTemplateColumn
                    CellEditingTemplate="{StaticResource ColorCellEditingTemplate}"
                    CellTemplate="{StaticResource ColorCellTemplate}"
                    Header="Color" />
                <DataGridTextColumn
                    Binding="{Binding Path=FontSizeString}"
                    ElementStyle="{StaticResource TextBlockCellStyle}"
                    Header="Font size" />
                <DataGridTextColumn
                    Binding="{Binding Path=ExpandChildren}"
                    ElementStyle="{StaticResource TextBlockCellStyle}"
                    Header="Expand children" />
                <DataGridTextColumn
                    Binding="{Binding Path=WarningMessage}"
                    ElementStyle="{StaticResource TextBlockCellStyle}"
                    Header="Warning message" />

                <!--<DataGridCheckBoxColumn
                        Binding="{Binding Path=IsDirty, Mode=OneWay}"
                        Header="Has changed"
                        ElementStyle="{StaticResource CheckBoxCellStyle}"
                        IsReadOnly="True" />-->
            </DataGrid.Columns>
        </DataGrid>


        <StackPanel
            Grid.Row="7"
            Grid.ColumnSpan="2"
            Margin="0,10,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                MinWidth="100"
                Margin="10"
                Padding="5"
                Click="OnSaveButtonClick"
                IsDefault="True">
                Save
            </Button>
            <Button
                MinWidth="100"
                Margin="10"
                Padding="5"
                Click="OnCancelButtonClick"
                IsCancel="True">
                Cancel
            </Button>
        </StackPanel>
    </Grid>
</Window>
